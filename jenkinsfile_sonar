pipeline {
    agent {
         label 'javaproject'
          }
    stages {
        stage('compile') {
	      steps {
               echo 'compiling..'
	  	       git url: 'https://github.com/lerndevops/DevOpsClassCodes'
	           sh script: '/opt/maven/bin/mvn compile'
           }
        }
        stage('codereview-pmd') {
	      steps {
                echo 'codereview..'
	        	sh script: '/opt/maven/bin/mvn -P metrics pmd:pmd'
                }
	      post {
               success {
		       recordIssues enabledForFailure: true, tool: pmdParser(pattern: '**/target/pmd.xml')
               }
           }		
        }
        stage('unit-test') {
	      steps {
                echo 'unittest..'
	            sh script: '/opt/maven/bin/mvn test'
                 }
	      post {
               success {
                   junit 'target/surefire-reports/*.xml'
               }
           }			
        }
        stage('codecoverate') {
	      steps {
                echo 'codecoverage..'
		        sh script: '/opt/maven/bin/mvn verify'
                }
	      post {
               success {
	             jacoco exclusionPattern: '**/*Test*.class', inclusionPattern: '**/*.class'
              }
           }		
        }
        stage('package') {
	      steps {
                echo 'package..'
		        sh script: '/opt/maven/bin/mvn package'	
           }		
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
		sh script: '/opt/maven/bin/mvn sonar:sonar -Dsonar.projectKey=sampleapp -Dsonar.ProjectName=sampleapp'
                echo 'SonarQube Analysis Completed'
                }
            }
        }
    }
}
